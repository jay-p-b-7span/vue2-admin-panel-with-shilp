@import "./shilp.scss";
@import "shilp/scss/styles.scss";
@import "~shilp-vue/dist/shilp-vue";

.w-screen {
  width: 100vw;
}

.h-screen {
  height: 100vh;
}

.w-full {
  width: 100%;
}

.w-52 {
  width: 108px;
}

.h-full {
  width: 100%;
}
.button {
  font-weight: bold;
}

.items-center {
  align-items: center;
}

.justify-center {
  justify-content: center;
}

.cursor-pointer {
  cursor: pointer;
}

.rounded {
  border-radius: 4px;

  &-md {
    border-radius: 6px;
  }
}

.relative {
  position: relative;
}

.absolute {
  position: absolute;
}

.inset-0 {
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

.opacity-0 {
  opacity: 0;
}

font-thin {
  font-weight: 100;
}

font-extralight {
  font-weight: 200;
}

font-light {
  font-weight: 300;
}
font-normal {
  font-weight: 400;
}
font-medium {
  font-weight: 500;
}
font-semibold {
  font-weight: 600;
}
font-bold {
  font-weight: 700;
}

font-extrabold {
  font-weight: 800;
}
font-black {
  font-weight: 900;
}

.flex-grow {
  flex-grow: 1;
}

.block {
  display: block;
}

.sticky {
  position: sticky;
}

.top-0 {
  top: 0;
}

// Border Utilities
.border-b {
  border-bottom: 1px solid var(--color--grey--lighter);
}

.z-10 {
  z-index: 10;
}

.z-20 {
  z-index: 20;
}
.bottom-0 {
  bottom: 0;
}

.left-0 {
  left: 0;
}

.right-0 {
  right: 0;
}

.right-4 {
  right: 16px;
}
.items-stretch {
  align-items: stretch;
}

.leading-none {
  line-height: 1;
}

.border-l {
  border-left-width: 1px;
}

.h-12 {
  height: 48px;
}

.outline-none {
  outline: 0;
}

.focus\:ring-2:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
    var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
    calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
    var(--tw-shadow, 0 0 #0000);
}

.focus\:ring-inset:focus {
  --tw-ring-inset: inset;
}

.focus\:ring-grey-lighter {
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--color--grey--lighter);
}

divide-x > * + * {
  border-right-width: 1px;
  border-left-width: 0px;
}

divide-y > * + * {
  border-top-width: 0px;
  border-bottom: 1px solid var(--color--grey--lighter);
}
.border-t {
  border-top: 1px solid var(--color--grey--lighter);
}

.animate-pulse {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

@keyframes pulse {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

.hover\:text-grey-darker:hover {
  color: var(--color--grey--darker);
}

.rounded-full {
  border-radius: 999999px;
}

.rounded-md {
  border-radius: 6px;
}

animate-ping {
  animation: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite;
}

@keyframes ping {
  75%,
  100% {
    transform: scale(2);
    opacity: 0;
  }
}

.hover\:bg-grey-lightest:hover {
  background: var(--color--grey--lightest);
}

.hover\:bg-grey-darker:hover {
  background: var(--color--grey--darker);
}

.opacity-5 {
  opacity: 0.05;
}

.overflow-hidden {
  overflow: hidden;
}

.overflow-auto {
  overflow: auto;
}

.vp-transform {
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.vp-transition-transform {
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
